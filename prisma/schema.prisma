generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  userID           Int        @id @default(autoincrement())
  userSecretKey    String?    @db.VarChar(255)
  userUsername     String?    @db.VarChar(255)
  userPassword     String?    @db.VarChar(255)
  userFullName     String?    @db.VarChar(255)
  userEmail        String?    @db.VarChar(255)
  userPhone        String?    @db.VarChar(255)
  userStatus       String?    @db.VarChar(255)
  userCreatedDate  DateTime?  @db.DateTime(0)
  userModifiedDate DateTime?  @db.DateTime(0)
  userrole         userrole[]
}

model role {
  roleID           Int        @id @default(autoincrement())
  roleName         String?    @db.VarChar(255)
  roleDescription  String?    @db.VarChar(255)
  roleStatus       String?    @db.VarChar(255)
  roleCreatedDate  DateTime?  @db.DateTime(0)
  roleModifiedDate DateTime?  @db.DateTime(0)
  userrole         userrole[]
}

model userrole {
  userRoleID          Int      @id @default(autoincrement())
  userRoleUserID      Int      @default(0)
  userRoleRoleID      Int      @default(0)
  userRoleCreatedDate DateTime @db.DateTime(0)
  role                role     @relation(fields: [userRoleRoleID], references: [roleID], onUpdate: Restrict, map: "FK_userrole_role")
  user                user     @relation(fields: [userRoleUserID], references: [userID], onUpdate: Restrict, map: "FK_userrole_user")

  @@index([userRoleRoleID], map: "FK_userrole_role")
  @@index([userRoleUserID], map: "FK_userrole_user")
}

model parking_log {
  id               String    @id @default(uuid()) @unique
  car_plate_number String?   @db.VarChar(20)
  project          String?   @db.VarChar(255)
  time_in          DateTime? @db.DateTime(0)
  time_out         DateTime? @db.DateTime(0)
  entry_exit_code  String?   @db.VarChar(255)
  parker_type      String?   @db.VarChar(255)
  surveyor         String?   @db.VarChar(255)
}
